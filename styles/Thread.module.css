/* Thread.module.css */

.overlay { /* grays out the rest of parts */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 9; /* Below threadContainer but above other content */
}

.threadContainer {
    position: fixed;
    top: 0;
    right: 0;
    width: 40%; /* Set the width for the thread */
    height: 100%; /* Full height */
    background: #FFFFFF;
    z-index: 10;
    overflow-y: auto; /* Allow scrolling inside the thread */
    box-sizing: border-box; /* Include padding in the width and height */
    display: flex;
    flex-direction: column; /* Stack children vertically */
    padding: 20px; /* Add padding to avoid content touching the edges */
}

.threadTitle {
    margin-top: 45px;
    margin-left: 48px;
    font-family: 'Roboto', sans-serif;
    font-size: 32px;
    font-weight: 600;
    line-height: 40px;
    text-align: left;
    color: #000000;
}

.threadDescription {
    margin-top: 27px; /* space from thread title */
    margin-left: 48px;
    margin-right: 50px;
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    font-weight: 400;
    line-height: 20px;
    letter-spacing: 0em;
    text-align: left;
    color: #7B7B7B;
}

.formGroup {
    margin-left: 14px; /* space from status circles */
    margin-right: 48px;
    display: flex; /* Use flex to allow children to fill the space */
    flex-direction: column; /* Stack children vertically */
    flex-grow: 1; /* Make sure the container fills the height */
    padding-right: 20px; /* Adjust padding to create space on the right side */
    padding-left: 20px; /* Adjust padding to create space on the left side */
}

.label {
    min-width: 420px;
    font-family: Roboto, sans-serif;
    font-weight: 400;
    font-size: 14px;
    line-height: 20px;
    color: #000000;
    display: block;
    margin-bottom: 12px;
}

.input {
    min-width: 420px;
    width: 100%;
    padding: 13px 23px 14px 23px; /* top, right, bottom, left padding with input text */
    border: 1px solid #ACACAC;
    border-radius: 4px;
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    line-height: 20px;
    margin-bottom: 32px; /* space between the form elements */
    box-sizing: border-box; /* Include padding and border in the element's width and height */
}

.select {
    width: 100%;
    -webkit-appearance: none;  /* Chrome, Safari */
    -moz-appearance: none;     /* Firefox */
    appearance: none;          /* Standard syntax */
    background-image: url('/chevron-down.svg');
    background-repeat: no-repeat;
    background-position: right 11px center;
    background-size: 16px;
    border-radius: 4px;
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    line-height: 20px;
    margin-bottom: 32px; /* space between the form elements */
    box-sizing: border-box; /* Include padding and border in the element's width and height */
}


/* Style the select control to match the input */
threadContainer .select__control {
    padding: 13px 11px 14px 23px; /* Match the padding with the input */
    border: 1px solid #ACACAC;
    border-radius: 4px;
    font-family: 'Roboto', sans-serif;
    font-size: 14px;
    line-height: 20px;
    box-shadow: none; /* Remove any box-shadow if present */
}

/* Style the value container within the select */
threadContainer .select__value-container {
    padding: 0; /* Remove padding if any */
}

/* Style the single value within the select */
threadContainer .select__single-value {
    color: #000; /* Match the text color with the input */
}

/* Style the placeholder within the select */
threadContainer .select__placeholder {
    color: #000; /* Match the placeholder color with the input */
}

/* Hide the indicator separator */
threadContainer .select__indicator-separator {
    display: none; /* Hide separator if you want to */
}

/* Style the dropdown arrow to match the input's arrow */
threadContainer .select__indicator svg {
    display: block;
    width: 16px;
    height: 16px;
    background-image: url('/chevron-down.svg'); /* Use the same image */
    background-repeat: no-repeat;
    background-position: center;
}

/* Style the dropdown menu to fit the full width */
.select__menu {
    width: calc(100% - 48px); /* Account for padding */
}

/* Optional: Style the option in the dropdown menu */
.select__option {
    padding: 10px 20px; /* Match the padding to suit your design */
}

.select:focus {
    outline: none;
    border-color: #5b9dd9;
    box-shadow: 0 0 0 1px #5b9dd9;
}

.checkboxContainer {
    display: flex;
    align-items: center;
}

.checkboxContainer input[type="checkbox"] {
    width: 18px;
    height: 18px;
    cursor: pointer;
    margin-right: 19px; /* Space between the checkbox and the label */
    margin-top: -32px; /* Move up the checkbox */
}

.checkboxTextContainer {
    display: flex;
    flex-direction: column;
}

.checkboxLabel {
    font-family: Roboto, sans-serif;
    font-weight: 400;
    font-size: 14px;
    line-height: 20px;
    color: #000000;
    cursor: pointer;
    margin-bottom: 0px;
}

.checkboxDescriptionText {
    font-family: Roboto, sans-serif;
    font-weight: 400;
    font-size: 14px;
    line-height: 20px;
    color: #A4ACA8;
    margin-top: 2px;
}

/* cancel and submit buttons */
.buttonsContainer {
    display: flex;
    justify-content: flex-end; /* Align buttons to the right */
    gap: 10px; /* Space between buttons */
    width: 100%;
    margin-top: 100px;
}

.buttonCancel {
    font-family: Roboto;
    font-size: 16px;
    font-weight: 600;
    line-height: 22px;
    letter-spacing: 0em;
    text-align: left;
    border: none;
    color: #000000;
    background-color: #FFFFFF;
    margin-right: 31px; /* Space between buttons */
}

.buttonSubmit {
    color: #FFFFFF;
    background-color: #CCCCCC; /* Default grey color when not active */
    border: none;
    padding: 10px 20px;
    gap: 10px;
    font-family: Roboto;
    font-size: 16px;
    font-weight: 600;
    line-height: 22px;
    letter-spacing: 0em;
    text-align: center;
    cursor: pointer;
    margin-right: 48px;
}

.buttonSubmit.buttonActive {
    background-color: #000000; /* Black color when form is all filled */
}

/* confirmation message */
.confirmationContainer {
    display: flex;
    flex-direction: column;
    justify-content: center; /* Center children vertically */
    align-items: center; /* Center children horizontally */
    position: fixed; /* position relative to the viewport */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 30%;
    min-height: 35%; /* ensure the container can grow if content is larger */
    background: #FFF;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    z-index: 11; /* Ensure it's above the rest of the thread content */
    padding: 20px; /* Add padding to avoid content touching the edges */
}

.confirmationTitle {
    font-family: 'Roboto';
    font-size: 24px;
    font-weight: 600;
    line-height: 32px;
    margin-bottom: 18px; /* Spacing between the title and body text */
}

.confirmationBody {
    font-family: 'Roboto';
    font-size: 16px;
    font-weight: 400;
    line-height: 22px;
    color: #7B7B7B;
    text-align: center;
    padding: 0 50px; /* Horizontal padding for text body */
}

.goToDiscussionsButton {
    font-family: 'Roboto';
    font-size: 20px;
    font-weight: 600;
    line-height: 26px;
    background-color: #000000;
    color: #FFFFFF;
    border: none;
    padding: 20px 49px;
    margin-top: 34px; /* Spacing between the body text and the button */
    cursor: pointer;
    display: flex;
    align-items: center; /* Center items vertically */
    justify-content: center; /* Center items horizontally */
    
    padding-left: 74px; /* Original padding-left plus the width of the icon */
    background-image: url('/discussionforum.svg');
    background-repeat: no-repeat;
    background-position: 24px center; /* Position the icon 20px from the left */
    background-size: 28px; /* The size of the icon */
}

.closeButton {
    font-family: 'Roboto';
    font-size: 24px;
    font-weight: 600;
    line-height: 32px;
    color: #000;
    cursor: pointer;
    position: absolute;
    top: 10px;
    right: 20px;
}

/* include all forms and circles */
.formContainer {
    display: flex;
    flex-direction: row; /* Stack children horizontally */
    margin-top: 41px; /* space from thread subTitle */
}

.statusCircleContainer {
    display: flex;
    flex-direction: column; /* Stack children vertically */
    align-items: flex-start; /* Align circles to the start of the flex container */
    margin-left: 48px;
}

.statusCircle {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-color: #000000; /* Black for active */
    margin-bottom: 96px;
    position: relative; /* for positioning pseudo-elements */
}

.statusCircle::after {
    content: '';
    position: absolute;
    left: 50%;
    bottom: -97px; /* same as the margin-bottom of .statusCircle */
    transform: translateX(-50%);
    width: 1px; /* line thickness */
    height: calc(100% + 96px); /* height of the connecting line */
    background-color: #000000; /* color of the line */
    z-index: -1;
}

.statusCircle:last-child::after {
    display: none; /* remove line after the last circle */
}

#statusOne {
    background-color: #000000; /* Black for active */
}

#statusTwo {
    background-color: #D9D9D9; /* Light grey for inactive */
    border: 1px solid #7B7B7B; /* Grey border */
}

#statusThree {
    background-color: #D9D9D9; /* Light grey for inactive */
    border: 1px solid #000000; /* Black border */
}
