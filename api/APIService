import * as fal from '@fal-ai/serverless-client';

/*
-- Usage Example --
const apiService = new APIService();
async function fetchImagesFromPrompt() {
  const prompt = "Photo of a european medieval 40 year old queen, silver hair, highly detailed face, detailed eyes, head shot, intricate crowns";
  try {
    const result = await apiService.subscribeToModel(prompt);
    console.log("Subscription result:", result);
  } catch (error) {
    console.error("Error during subscription:", error);
  }
}
fetchImagesFromPrompt();
*/

class APIService {

  constructor() {
    fal.config({
      credentials:
    });
}
    // Generate a random seed within the specified range
    generateRandomSeed() {
      return Math.floor(Math.random() * (9999999 - 1000000 + 1)) + 1000000;
    }
  
    async subscribeToModel({
      prompt = "detailed portrait photo of a teacher",
      negativePrompt = "deformed, disfigured, black and white, anime, cartoon, 3d, low contrast, yellow",
      guidanceScale = 14.5,
      numImages = 8,
    }) {
    
      // Generate a new random seed each time
      const seed = this.generateRandomSeed(); 
      try {
        const result = await fal.subscribe("fal-ai/fast-sdxl", {
          input: {
            prompt: prompt,
            negative_prompt: negativePrompt,
            image_size: "square_hd",
            guidance_scale: guidanceScale,
            num_images: numImages,
            seed: seed,
            model_name: "stabilityai/stable-diffusion-xl-base-1.0", 
          },
          logs: true,
          onQueueUpdate: (update) => {
            if (update.status === "IN_PROGRESS") {
              update.logs.map((log) => log.message).forEach(console.log);
            }
          },
        });
  
        return result;
      } catch (error) {
        console.error("Error subscribing to model:", error);
        throw error;
      }
    }
  }
  
  export default APIService;